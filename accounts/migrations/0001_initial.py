# Generated by Django 5.1.7 on 2025-04-08 12:19

import accounts.utils
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=80)),
                ('last_name', models.CharField(max_length=80)),
                ('bio', models.TextField()),
                ('phone_number', models.CharField(default='07XXXXXXXX', max_length=10)),
                ('user_type', models.CharField(choices=[('', 'Select'), ('doctor', 'doctor'), ('user', 'user')], max_length=90)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', accounts.utils.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('available', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('patient_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone_no', models.CharField(default='07XXXXXXXX', max_length=10, unique=True)),
                ('email', models.CharField(max_length=100, null=True, unique=True)),
                ('date_of_birth', models.DateTimeField()),
                ('insurance_number', models.CharField(max_length=100)),
                ('insurance_name', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Patients',
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('doctor_id', models.AutoField(primary_key=True, serialize=False)),
                ('specialization', models.CharField(max_length=200)),
                ('department', models.CharField(choices=[('paedetrics', 'Paedetrics'), ('optics', 'Optics'), ('oncology', 'Oncology'), ('dentist', 'Dentist'), ('hiv/aids', 'HIV/AIDS'), ('maternity', 'Maternity')], max_length=40)),
                ('availability_status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied')], default='available', max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('accounts.customuser',),
            managers=[
                ('objects', accounts.utils.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('scheduled_time', models.TimeField()),
                ('duration', models.PositiveIntegerField(verbose_name='Duration (minutes)')),
                ('end_time', models.TimeField(editable=False)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('canceled', 'Canceled'), ('completed', 'Completed')], default='scheduled', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('availability', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.availability')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.patient')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.doctor')),
            ],
            options={
                'ordering': ['date', 'scheduled_time'],
                'unique_together': {('doctor', 'date', 'scheduled_time', 'end_time')},
            },
        ),
        migrations.AddField(
            model_name='availability',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.doctor'),
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('medicalrecord_id', models.AutoField(primary_key=True, serialize=False)),
                ('record_date', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.CharField(max_length=10000)),
                ('prescription', models.CharField(max_length=1000)),
                ('notes', models.CharField(max_length=10000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.appointment')),
            ],
            options={
                'verbose_name_plural': 'MedicalRecords',
                'ordering': ['appointment'],
                'unique_together': {('appointment',)},
            },
        ),
        migrations.AlterUniqueTogether(
            name='availability',
            unique_together={('doctor', 'date', 'start_time', 'end_time')},
        ),
    ]
