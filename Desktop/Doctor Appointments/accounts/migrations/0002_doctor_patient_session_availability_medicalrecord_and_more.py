# Generated by Django 5.1.7 on 2025-04-07 11:53

import accounts.utils
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('doctor_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('specialization', models.CharField(max_length=200)),
                ('department', models.CharField(choices=[('paedetrics', 'Paedetrics'), ('optics', 'Optics'), ('oncology', 'Oncology'), ('dentist', 'Dentist'), ('hiv/aids', 'HIV/AIDS'), ('maternity', 'Maternity')], max_length=40)),
                ('phone_no', models.CharField(max_length=10, unique=True)),
                ('availability_status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied')], default='availabe', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Doctors',
                'ordering': ['last_name'],
            },
            bases=('accounts.customuser',),
            managers=[
                ('objects', accounts.utils.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('patient_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone_no', models.CharField(max_length=10, unique=True)),
                ('email', models.CharField(max_length=100, null=True, unique=True)),
                ('date_of_birth', models.DateTimeField()),
                ('insurance_number', models.CharField(max_length=100)),
                ('insurance_name', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Patients',
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('day_of_week', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=20)),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField()),
                ('available', models.BooleanField(default=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.doctor')),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicalrecord_id', models.IntegerField(unique=True)),
                ('record_date', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.CharField(max_length=10000)),
                ('prescription', models.CharField(max_length=1000)),
                ('notes', models.CharField(max_length=10000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.doctor', verbose_name='doctors')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.patient', verbose_name='patient')),
            ],
            options={
                'verbose_name_plural': 'MedicalRecords',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('day', models.CharField(choices=[('1', 'Monday'), ('2', 'Teusday'), ('3', 'Wednesday'), ('4', 'Thurday'), ('5', 'Friday')], max_length=20)),
                ('scheduled_time', models.TimeField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('duration', models.IntegerField(verbose_name='duration (min)')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('canceled', 'Canceled'), ('completed', 'Completed')], max_length=20)),
                ('end_time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.doctor', verbose_name='doctor')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.patient', verbose_name='patients')),
            ],
            options={
                'verbose_name_plural': 'Appointments',
                'ordering': ['timestamp'],
            },
        ),
    ]
